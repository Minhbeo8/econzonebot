# bot/cogs/admin/unmutebot_cmd.py
import nextcord
from nextcord.ext import commands

from core.database import get_guild_config, save_guild_config # Ch·ªâ c·∫ßn 2 h√†m n√†y
from core.utils import try_send
# from core.config import COMMAND_PREFIX # Kh√¥ng c·∫ßn thi·∫øt cho file n√†y
from core.icons import ICON_ERROR, ICON_INFO, ICON_SUCCESS # ƒê·∫£m b·∫£o c√°c icon n√†y c√≥ trong core/icons.py

class UnmuteBotCommandCog(commands.Cog, name="UnmuteBot Command"):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @commands.command(name="unmutebot") # T√™n l·ªánh m√† ng∆∞·ªùi d√πng s·∫Ω g√µ
    @commands.has_guild_permissions(administrator=True)
    async def unmute_bot_channel(self, ctx: commands.Context, channel: nextcord.TextChannel = None): # T√™n h√†m c√≥ th·ªÉ gi·ªØ nguy√™n ho·∫∑c ƒë·ªïi
        """(Admin) B·∫≠t l·∫°i ti·∫øng bot (cho ph√©p g·ª≠i tin nh·∫Øn c√¥ng khai) trong k√™nh n√†y ho·∫∑c k√™nh ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh."""
        target_channel = channel or ctx.channel
        if not ctx.guild:
            await try_send(ctx, content=f"{ICON_ERROR} L·ªánh n√†y ch·ªâ c√≥ th·ªÉ s·ª≠ d·ª•ng trong m·ªôt server.")
            return
            
        current_guild_config = get_guild_config(ctx.guild.id)
        # L·∫•y list hi·ªán t·∫°i, ho·∫∑c list r·ªóng n·∫øu ch∆∞a c√≥ key
        muted_channels_list = current_guild_config.get("muted_channels", [])
        
        if target_channel.id not in muted_channels_list:
            await try_send(ctx, content=f"{ICON_INFO} Bot kh√¥ng b·ªã t·∫Øt ti·∫øng (c√¥ng khai) trong k√™nh {target_channel.mention}.")
        else:
            muted_channels_list.remove(target_channel.id)
            current_guild_config["muted_channels"] = muted_channels_list # C·∫≠p nh·∫≠t list
            save_guild_config(ctx.guild.id, current_guild_config) # L∆∞u l·∫°i to√†n b·ªô object config c·ªßa guild
            # B·∫°n c√≥ th·ªÉ d√πng ICON_SUCCESS ho·∫∑c gi·ªØ l·∫°i emoji g·ªëc üîä t√πy th√≠ch
            await try_send(ctx, content=f"üîä Bot ƒë√£ ƒë∆∞·ª£c **B·∫¨T TI·∫æNG** (c√¥ng khai) tr·ªü l·∫°i trong k√™nh {target_channel.mention}.")

    @unmute_bot_channel.error # T√™n h√†m x·ª≠ l√Ω l·ªói ph·∫£i kh·ªõp v·ªõi t√™n h√†m l·ªánh
    async def unmute_bot_channel_error(self, ctx: commands.Context, error):
        if isinstance(error, commands.MissingPermissions):
            await try_send(ctx, content=f"{ICON_ERROR} B·∫°n c·∫ßn quy·ªÅn `Administrator` ƒë·ªÉ d√πng l·ªánh n√†y.")
        elif isinstance(error, commands.BadArgument):
            await try_send(ctx, content=f"{ICON_ERROR} Kh√¥ng t√¨m th·∫•y k√™nh ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh ho·∫∑c b·∫°n nh·∫≠p sai.")
        else:
            command_name_for_log = ctx.command.name if ctx.command else "unmutebot"
            print(f"L·ªói kh√¥ng x√°c ƒë·ªãnh trong l·ªánh {command_name_for_log}: {error}")
            await try_send(ctx, content=f"{ICON_ERROR} C√≥ l·ªói x·∫£y ra khi th·ª±c hi·ªán l·ªánh b·∫≠t ti·∫øng bot.")

def setup(bot: commands.Bot):
    bot.add_cog(UnmuteBotCommandCog(bot))
