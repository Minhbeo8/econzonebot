# bot/cogs/misc/help_slash_cmd.py
import nextcord
from nextcord.ext import commands

# Import c√°c th√†nh ph·∫ßn c·∫ßn thi·∫øt t·ª´ package 'core'
from core.utils import try_send
from core.config import (
    COMMAND_PREFIX, # C·∫ßn COMMAND_PREFIX ƒë·ªÉ hi·ªÉn th·ªã trong help
    WORK_COOLDOWN, DAILY_COOLDOWN, BEG_COOLDOWN, ROB_COOLDOWN, 
    CRIME_COOLDOWN, FISH_COOLDOWN, SLOTS_COOLDOWN, CF_COOLDOWN, DICE_COOLDOWN
)
from core.icons import ( # Import c√°c icon b·∫°n mu·ªën d√πng
    ICON_HELP, ICON_COMMAND_DETAIL, ICON_BANK, ICON_MONEY_BAG, 
    ICON_GAME, ICON_SHOP, ICON_ADMIN, ICON_INFO, ICON_WARNING, ICON_ERROR
)


class HelpSlashCommandCog(commands.Cog, name="Help Slash Command"):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @nextcord.slash_command(name="help", description=f"{ICON_INFO} Hi·ªÉn th·ªã th√¥ng tin tr·ª£ gi√∫p cho c√°c l·ªánh c·ªßa bot.")
    async def help_slash_command(self,
                                 interaction: nextcord.Interaction,
                                 command_name: str = nextcord.SlashOption(
                                     name="l·ªánh", 
                                     description="T√™n l·ªánh prefix b·∫°n mu·ªën xem chi ti·∫øt (v√≠ d·ª•: work, balance).",
                                     required=False,
                                     default=None
                                 )):
        """Hi·ªÉn th·ªã danh s√°ch c√°c l·ªánh ho·∫∑c th√¥ng tin chi ti·∫øt v·ªÅ m·ªôt l·ªánh (prefix) c·ª• th·ªÉ."""
        
        await interaction.response.defer(ephemeral=True) # Quan tr·ªçng: Defer tr∆∞·ªõc khi x·ª≠ l√Ω
        prefix = COMMAND_PREFIX
        
        if not command_name: # Hi·ªÉn th·ªã menu tr·ª£ gi√∫p chung
            embed = nextcord.Embed(
                title=f"{ICON_HELP} Menu Tr·ª£ Gi√∫p - Bot Kinh T·∫ø",
                description=(
                    f"Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Bot Kinh T·∫ø! D∆∞·ªõi ƒë√¢y l√† c√°c l·ªánh b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng.\n"
                    f"ƒê·ªÉ xem chi ti·∫øt m·ªôt l·ªánh, d√πng `/help l·ªánh <t√™n_l·ªánh>` (v√≠ d·ª•: `/help l·ªánh work`).\n"
                    f"*L∆∞u √Ω: H·∫ßu h·∫øt c√°c l·ªánh ƒë·ªÅu c√≥ t√™n g·ªçi t·∫Øt (alias) ƒë∆∞·ª£c li·ªát k√™ trong chi ti·∫øt l·ªánh.*\n"
                    f"Qu·∫£n tr·ªã vi√™n c√≥ th·ªÉ d√πng `{prefix}auto` ƒë·ªÉ b·∫≠t/t·∫Øt l·ªánh kh√¥ng c·∫ßn prefix trong m·ªôt k√™nh."
                ),
                color=nextcord.Color.dark_theme(),
            )
            
            embed.add_field(name=f"{ICON_BANK} T√†i Kho·∫£n & T·ªïng Quan",
                            value="`balance` `bank` `deposit` `withdraw` `transfer` `leaderboard` `richest` `inventory`",
                            inline=False)
            embed.add_field(name=f"{ICON_MONEY_BAG} Ki·∫øm Ti·ªÅn & C∆° H·ªôi", # D√πng ICON_MONEY_BAG v√≠ d·ª•
                            value="`work` `daily` `beg` `crime` `fish` `rob`",
                            inline=False)
            embed.add_field(name=f"{ICON_GAME} Gi·∫£i Tr√≠ & C·ªù B·∫°c",
                            value="`slots` `coinflip` `dice`",
                            inline=False)
            embed.add_field(name=f"{ICON_SHOP} C·ª≠a H√†ng V·∫≠t Ph·∫©m",
                            value="`shop` `buy` `sell`",
                            inline=False)
            embed.add_field(name=f"{ICON_ADMIN} Qu·∫£n Tr·ªã Server (L·ªánh Prefix)",
                            value=f"`{prefix}addmoney` `{prefix}removemoney` `{prefix}auto` `{prefix}mutebot` `{prefix}unmutebot`",
                            inline=False)
            
            embed.set_footer(text=f"Bot ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi MinhBeo8. G√µ /help l·ªánh <t√™n_l·ªánh> ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt.")
            await try_send(interaction, embed=embed, ephemeral=True) 
        else:
            cmd_name_to_find = command_name.lower().lstrip(prefix) 
            command_obj = self.bot.get_command(cmd_name_to_find)
            
            if not command_obj:
                await try_send(interaction, content=f"{ICON_WARNING} Kh√¥ng t√¨m th·∫•y l·ªánh prefix n√†o c√≥ t√™n l√† `{command_name}`. H√£y ch·∫Øc ch·∫Øn b·∫°n nh·∫≠p ƒë√∫ng t√™n l·ªánh (v√≠ d·ª•: `work`, `balance` ho·∫∑c t√™n g·ªçi t·∫Øt c·ªßa n√≥).", ephemeral=True)
                return

            embed = nextcord.Embed(title=f"{ICON_COMMAND_DETAIL} Chi ti·∫øt l·ªánh: {prefix}{command_obj.name}", color=nextcord.Color.green())
            
            help_text = command_obj.help 
            if not help_text:
                help_text = command_obj.short_doc or "L·ªánh n√†y ch∆∞a c√≥ m√¥ t·∫£ chi ti·∫øt." 
            embed.description = help_text

            usage = f"`{prefix}{command_obj.name} {command_obj.signature}`".strip()
            embed.add_field(name="üìù C√°ch s·ª≠ d·ª•ng", value=usage, inline=False)

            if command_obj.aliases:
                aliases_str = ", ".join([f"`{prefix}{alias}`" for alias in command_obj.aliases])
                embed.add_field(name="üè∑Ô∏è T√™n g·ªçi kh√°c (Aliases)", value=aliases_str, inline=False)
            else:
                embed.add_field(name="üè∑Ô∏è T√™n g·ªçi kh√°c (Aliases)", value="L·ªánh n√†y kh√¥ng c√≥ t√™n g·ªçi t·∫Øt.", inline=False)

            manual_cooldown_commands = {
                "work": WORK_COOLDOWN, "daily": DAILY_COOLDOWN, "beg": BEG_COOLDOWN,
                "rob": ROB_COOLDOWN, "crime": CRIME_COOLDOWN, "fish": FISH_COOLDOWN,
                "slots": SLOTS_COOLDOWN, "coinflip": CF_COOLDOWN, "dice": DICE_COOLDOWN
            }
            if command_obj.name in manual_cooldown_commands:
                cd_seconds = manual_cooldown_commands[command_obj.name]
                if cd_seconds >= 3600 and cd_seconds % 3600 == 0: cd_text = f"{cd_seconds // 3600} gi·ªù"
                elif cd_seconds >= 60 and cd_seconds % 60 == 0: cd_text = f"{cd_seconds // 60} ph√∫t"
                else: cd_text = f"{cd_seconds} gi√¢y"
                embed.add_field(name="‚è≥ Th·ªùi gian ch·ªù (Cooldown)", value=cd_text, inline=False)

            if command_obj.name in ["addmoney", "removemoney"]:
                embed.add_field(name="üîë Y√™u c·∫ßu", value="Ch·ªâ Ch·ªß Server (Ng∆∞·ªùi t·∫°o server).", inline=False)
            elif command_obj.name in ["auto", "mutebot", "unmutebot"]:
                embed.add_field(name="üîë Y√™u c·∫ßu", value="Quy·ªÅn `Administrator` trong server.", inline=False)
            
            await try_send(interaction, embed=embed, ephemeral=True)

def setup(bot: commands.Bot):
    bot.add_cog(HelpSlashCommandCog(bot))
